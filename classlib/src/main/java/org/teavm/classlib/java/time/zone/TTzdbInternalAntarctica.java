/*
 *  Copyright 2020 generated by Joerg Hohwiller.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.teavm.classlib.java.time.zone;

import java.util.Map;
import org.teavm.classlib.java.time.zone.TZoneOffsetTransitionRule.TimeDefinition;

final class TTzdbInternalAntarctica {
    static void init(Map<String, TZoneRules> map) {
        map.put("Antarctica/Casey", new TStandardZoneRules(new long[] {-31536000L, 1255802400L, 1267714800L, 1319738400L, 1329843600L, 1477065600L, 1520701200L}, new int[] {0, 28800, 39600, 28800, 39600, 28800, 39600, 28800}, new long[] {-31536000L, 1255802400L, 1267714800L, 1319738400L, 1329843600L, 1477065600L, 1520701200L}, new int[] {0, 28800, 39600, 28800, 39600, 28800, 39600, 28800}));
        map.put("Antarctica/Davis", new TStandardZoneRules(new long[] {-409190400L, -163062000L, -28857600L, 1255806000L, 1268251200L, 1319742000L, 1329854400L}, new int[] {0, 25200, 0, 25200, 18000, 25200, 18000, 25200}, new long[] {-409190400L, -163062000L, -28857600L, 1255806000L, 1268251200L, 1319742000L, 1329854400L}, new int[] {0, 25200, 0, 25200, 18000, 25200, 18000, 25200}));
        map.put("Antarctica/DumontDUrville", new TStandardZoneRules(new long[] {-725846400L, -566992800L, -415497600L}, new int[] {0, 36000, 0, 36000}, new long[] {-725846400L, -566992800L, -415497600L}, new int[] {0, 36000, 0, 36000}));
        map.put("Antarctica/Macquarie", new TStandardZoneRules(new long[] {-2214259200L, -1601719200L, -687052800L, 1270310400L}, new int[] {0, 36000, 0, 36000, 39600}, new long[] {-2214259200L, -1680508800L, -1665392400L, -1601719200L, -687052800L, -71136000L, -55411200L, -37267200L, -25776000L, -5817600L, 5673600L, 25632000L, 37728000L, 57686400L, 67968000L, 89136000L, 100022400L, 120585600L, 131472000L, 152035200L, 162921600L, 183484800L, 194976000L, 215539200L, 226425600L, 246988800L, 257875200L, 278438400L, 289324800L, 309888000L, 320774400L, 341337600L, 352224000L, 372787200L, 386092800L, 404841600L, 417542400L, 436291200L, 447177600L, 467740800L, 478627200L, 499190400L, 510076800L, 530035200L, 542736000L, 562089600L, 574790400L, 594144000L, 606240000L, 625593600L, 637689600L, 657043200L, 670348800L, 686678400L, 701798400L, 718128000L, 733248000L, 749577600L, 764697600L, 781027200L, 796147200L, 812476800L, 828201600L, 844531200L, 859651200L, 875980800L, 891100800L, 907430400L, 922550400L, 938880000L, 954000000L, 967305600L, 985449600L, 1002384000L, 1017504000L, 1033833600L, 1048953600L, 1065283200L, 1080403200L, 1096732800L, 1111852800L, 1128182400L, 1143907200L, 1159632000L, 1174752000L, 1191686400L, 1207411200L, 1223136000L, 1238860800L, 1254585600L}, new int[] {}));
        map.put("Antarctica/Mawson", new TStandardZoneRules(new long[] {-501206400L, 1255809600L}, new int[] {0, 21600, 18000}, new long[] {-501206400L, 1255809600L}, new int[] {0, 21600, 18000}));
        map.put("Antarctica/McMurdo", new TStandardZoneRules(new long[] {-3192435544L, -757425600L}, new int[] {41944, 41400, 43200}, new long[] {-3192435544L, -1330335000L, -1320057000L, -1300699800L, -1287396000L, -1269250200L, -1255946400L, -1237800600L, -1224496800L, -1206351000L, -1192442400L, -1174901400L, -1160992800L, -1143451800L, -1125914400L, -1112607000L, -1094464800L, -1081157400L, -1063015200L, -1049707800L, -1031565600L, -1018258200L, -1000116000L, -986808600L, -968061600L, -955359000L, -936612000L, -923304600L, 152632800L, 162309600L, 183477600L, 194968800L, 215532000L, 226418400L, 246981600L, 257868000L, 278431200L, 289317600L, 309880800L, 320767200L, 341330400L, 352216800L, 372780000L, 384271200L, 404834400L, 415720800L, 436284000L, 447170400L, 467733600L, 478620000L, 499183200L, 510069600L, 530632800L, 541519200L, 562082400L, 573573600L, 594136800L, 605023200L, 623772000L, 637682400L, 655221600L, 669132000L, 686671200L, 700581600L, 718120800L, 732636000L, 749570400L, 764085600L, 781020000L, 795535200L, 812469600L, 826984800L, 844524000L, 858434400L, 875973600L, 889884000L, 907423200L, 921938400L, 938872800L, 953388000L, 970322400L, 984837600L, 1002376800L, 1016287200L, 1033826400L, 1047736800L, 1065276000L, 1079791200L, 1096725600L, 1111240800L, 1128175200L, 1142690400L, 1159624800L, 1174140000L, 1191074400L, 1207404000L, 1222524000L, 1238853600L, 1253973600L}, new int[] {41944, 41400, 45000, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800}, new TZoneOffsetTransitionRule(4,1,7,7200,0,2,43200,46800,43200), new TZoneOffsetTransitionRule(9,24,7,7200,0,2,43200,43200,46800)));
        map.put("Antarctica/Palmer", new TStandardZoneRules(new long[] {-157766400L, -7588800L, 389070000L, 1480820400L}, new int[] {0, -14400, -10800, -14400, -10800}, new long[] {-157766400L, -152658000L, -132955200L, -121122000L, -101419200L, -86821200L, -71092800L, -54766800L, -39038400L, -23317200L, -7588800L, 128142000L, 136605600L, 389070000L, 403070400L, 416372400L, 434520000L, 447822000L, 466574400L, 479271600L, 498024000L, 510721200L, 529473600L, 545194800L, 560923200L, 574225200L, 592372800L, 605674800L, 624427200L, 637124400L, 653457600L, 668574000L, 687326400L, 700628400L, 718776000L, 732078000L, 750225600L, 763527600L, 781675200L, 794977200L, 813729600L, 826426800L, 845179200L, 859690800L, 876628800L, 889930800L, 906868800L, 923194800L, 939528000L, 952830000L, 971582400L, 984279600L, 1003032000L, 1015729200L, 1034481600L, 1047178800L, 1065931200L, 1079233200L, 1097380800L, 1110682800L, 1128830400L, 1142132400L, 1160884800L, 1173582000L, 1192334400L, 1206846000L, 1223784000L, 1237086000L, 1255233600L, 1270350000L, 1286683200L, 1304823600L, 1313899200L, 1335668400L, 1346558400L, 1367118000L, 1378612800L, 1398567600L, 1410062400L, 1463281200L, 1471147200L}, new int[] {}));
        map.put("Antarctica/Rothera", new TStandardZoneRules(new long[] {218246400L}, new int[] {0, -10800}, new long[] {218246400L}, new int[] {0, -10800}));
        map.put("Antarctica/South_Pole", new TStandardZoneRules(new long[] {-3192435544L, -757425600L}, new int[] {41944, 41400, 43200}, new long[] {-3192435544L, -1330335000L, -1320057000L, -1300699800L, -1287396000L, -1269250200L, -1255946400L, -1237800600L, -1224496800L, -1206351000L, -1192442400L, -1174901400L, -1160992800L, -1143451800L, -1125914400L, -1112607000L, -1094464800L, -1081157400L, -1063015200L, -1049707800L, -1031565600L, -1018258200L, -1000116000L, -986808600L, -968061600L, -955359000L, -936612000L, -923304600L, 152632800L, 162309600L, 183477600L, 194968800L, 215532000L, 226418400L, 246981600L, 257868000L, 278431200L, 289317600L, 309880800L, 320767200L, 341330400L, 352216800L, 372780000L, 384271200L, 404834400L, 415720800L, 436284000L, 447170400L, 467733600L, 478620000L, 499183200L, 510069600L, 530632800L, 541519200L, 562082400L, 573573600L, 594136800L, 605023200L, 623772000L, 637682400L, 655221600L, 669132000L, 686671200L, 700581600L, 718120800L, 732636000L, 749570400L, 764085600L, 781020000L, 795535200L, 812469600L, 826984800L, 844524000L, 858434400L, 875973600L, 889884000L, 907423200L, 921938400L, 938872800L, 953388000L, 970322400L, 984837600L, 1002376800L, 1016287200L, 1033826400L, 1047736800L, 1065276000L, 1079791200L, 1096725600L, 1111240800L, 1128175200L, 1142690400L, 1159624800L, 1174140000L, 1191074400L, 1207404000L, 1222524000L, 1238853600L, 1253973600L}, new int[] {41944, 41400, 45000, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 41400, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800, 43200, 46800}, new TZoneOffsetTransitionRule(4,1,7,7200,0,2,43200,46800,43200), new TZoneOffsetTransitionRule(9,24,7,7200,0,2,43200,43200,46800)));
        map.put("Antarctica/Syowa", new TStandardZoneRules(new long[] {-407808000L}, new int[] {0, 10800}, new long[] {-407808000L}, new int[] {0, 10800}));
        map.put("Antarctica/Troll", new TStandardZoneRules(new long[] {}, new int[] {0}, new long[] {1111885200L, 1130634000L, 1143334800L, 1162083600L}, new int[] {0, 7200, 0, 7200, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,7200,0)));
        map.put("Antarctica/Vostok", new TStandardZoneRules(new long[] {-380073600L}, new int[] {0, 21600}, new long[] {-380073600L}, new int[] {0, 21600}));
    }
}
