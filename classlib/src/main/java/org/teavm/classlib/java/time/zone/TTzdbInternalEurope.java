/*
 *  Copyright 2020 generated by Joerg Hohwiller.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.teavm.classlib.java.time.zone;

import java.util.Map;
import org.teavm.classlib.java.time.zone.TZoneOffsetTransitionRule.TimeDefinition;

final class TTzdbInternalEurope {
    static void init(Map<String, TZoneRules> map) {
        map.put("Europe/Amsterdam", new TStandardZoneRules(new long[] {-1025745572L, -935022000L}, new int[] {1172, 1200, 3600}, new long[] {-1693700372L, -1680484772L, -1663453172L, -1650147572L, -1633213172L, -1617488372L, -1601158772L, -1586038772L, -1569709172L, -1554589172L, -1538259572L, -1523139572L, -1507501172L, -1490566772L, -1470176372L, -1459117172L, -1443997172L, -1427667572L, -1406672372L, -1396217972L, -1376950772L, -1364768372L, -1345414772L, -1333318772L, -1313792372L, -1301264372L, -1282256372L, -1269814772L, -1250720372L, -1238365172L, -1219184372L, -1206915572L, -1186957172L, -1175465972L, -1156025972L, -1143411572L, -1124489972L, -1111961972L, -1092953972L, -1080512372L, -1061331572L, -1049062772L, -1029190772L, -1025745572L, -1017613200L, -998259600L, -986163600L, -966723600L, -954109200L, -935022000L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -766623600L, 228877200L, 243997200L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 1172, 4772, 4800, 1200, 4800, 1200, 4800, 1200, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Andorra", new TStandardZoneRules(new long[] {-2177453164L, -733881600L}, new int[] {364, 0, 3600}, new long[] {-2177453164L, -733881600L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {364, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Astrakhan", new TStandardZoneRules(new long[] {-1441249932L, -1247540400L, 606866400L, 670374000L, 701820000L, 1301180400L, 1414274400L, 1459033200L}, new int[] {11532, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}, new long[] {-1441249932L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 575416800L, 591141600L, 622594800L, 638319600L, 654649200L, 670374000L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L, 1459033200L}, new int[] {11532, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}));
        map.put("Europe/Athens", new TStandardZoneRules(new long[] {-1686101632L, -904878000L, -812422800L}, new int[] {5692, 7200, 3600, 7200}, new long[] {-1686101632L, -1182996000L, -1178161200L, -906861600L, -904878000L, -857257200L, -844477200L, -828237600L, -812422800L, -552362400L, -541652400L, 166485600L, 186184800L, 198028800L, 213753600L, 228873600L, 244080000L, 260323200L, 275446800L, 291798000L, 307407600L, 323388000L, 338936400L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {5692, 7200, 10800, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Belfast", new TStandardZoneRules(new long[] {-3852662325L, -37242000L, 57722400L}, new int[] {-75, 0, 3600, 0}, new long[] {-3852662325L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Belgrade", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Berlin", new TStandardZoneRules(new long[] {-2422054408L}, new int[] {3208, 3600}, new long[] {-2422054408L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -776563200L, -765936000L, -761180400L, -748479600L, -733273200L, -717631200L, -714610800L, -710380800L, -701910000L, -684975600L, -670460400L, -654130800L, -639010800L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {3208, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Bratislava", new TStandardZoneRules(new long[] {-2469401864L, -728517600L, -721260000L}, new int[] {3464, 3600, 0, 3600}, new long[] {-2469401864L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -765327600L, -746578800L, -733359600L, -728517600L, -721260000L, -716425200L, -701910000L, -684975600L, -670460400L, -654217200L, -639010800L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {3464, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Brussels", new TStandardZoneRules(new long[] {-2450995200L, -1740355200L, -1613826000L, -934668000L}, new int[] {1050, 0, 3600, 0, 3600}, new long[] {-2450995200L, -1740355200L, -1693702800L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -1613826000L, -1604278800L, -1585530000L, -1574038800L, -1552266000L, -1539997200L, -1520557200L, -1507510800L, -1490576400L, -1473642000L, -1459126800L, -1444006800L, -1427677200L, -1411952400L, -1396227600L, -1379293200L, -1364778000L, -1348448400L, -1333328400L, -1316394000L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1191189600L, -1175464800L, -1160344800L, -1143410400L, -1127685600L, -1111960800L, -1096840800L, -1080511200L, -1063576800L, -1049061600L, -1033336800L, -1017612000L, -1002492000L, -986162400L, -969228000L, -950479200L, -942012000L, -934668000L, -857257200L, -844556400L, -828226800L, -812502000L, -798073200L, -781052400L, -766623600L, -745455600L, -733273200L, 228877200L, 243997200L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {1050, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Bucharest", new TStandardZoneRules(new long[] {-1213148664L}, new int[] {6264, 7200}, new long[] {-1213148664L, -1187056800L, -1175479200L, -1159754400L, -1144029600L, -1127700000L, -1111975200L, -1096250400L, -1080525600L, -1064800800L, -1049076000L, -1033351200L, -1017626400L, -1001901600L, -986176800L, -970452000L, -954727200L, 296604000L, 307486800L, 323816400L, 338940000L, 354672000L, 370396800L, 386121600L, 401846400L, 417571200L, 433296000L, 449020800L, 465350400L, 481075200L, 496800000L, 512524800L, 528249600L, 543974400L, 559699200L, 575424000L, 591148800L, 606873600L, 622598400L, 638323200L, 654652800L, 670370400L, 686095200L, 701820000L, 717544800L, 733269600L, 748994400L, 764719200L, 780440400L, 796168800L, 811890000L, 828223200L, 846363600L, 859683600L, 877827600L, 891133200L, 909277200L}, new int[] {6264, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Budapest", new TStandardZoneRules(new long[] {-2500938980L}, new int[] {4580, 3600}, new long[] {-2500938980L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1633212000L, -1618700400L, -1600466400L, -1581202800L, -906771600L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -778471200L, -762660000L, -749689200L, -733359600L, -717634800L, -701910000L, -686185200L, -670460400L, -654130800L, -639010800L, -621990000L, -605660400L, -492656400L, -481168800L, -461120400L, -449632800L, -428547600L, -418269600L, -397094400L, -386809200L, 323827200L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4580, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Busingen", new TStandardZoneRules(new long[] {-3675198848L, -2385246586L}, new int[] {2048, 1786, 3600}, new long[] {-3675198848L, -2385246586L, -904435200L, -891129600L, -872985600L, -859680000L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {2048, 1786, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Chisinau", new TStandardZoneRules(new long[] {-2840147720L, -1637114100L, -1213148664L, -898138800L, -800157600L, 641944800L}, new int[] {6920, 6900, 6264, 7200, 3600, 10800, 7200}, new long[] {-2840147720L, -1637114100L, -1213148664L, -1187056800L, -1175479200L, -1159754400L, -1144029600L, -1127700000L, -1111975200L, -1096250400L, -1080525600L, -1064800800L, -1049076000L, -1033351200L, -1017626400L, -1001901600L, -986176800L, -970452000L, -954727200L, -927165600L, -898138800L, -857257200L, -844556400L, -828226800L, -812502000L, -800157600L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 641944800L, 654652800L, 670377600L, 686102400L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796168800L, 811890000L, 828223200L, 846363600L, 859680000L, 877824000L, 891129600L, 909273600L}, new int[] {6920, 6900, 6264, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,7200,0,1,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,10800,0,1,7200,10800,7200)));
        map.put("Europe/Copenhagen", new TStandardZoneRules(new long[] {-2398294220L}, new int[] {3020, 3600}, new long[] {-2398294220L, -1692496800L, -1680490800L, -935110800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -769388400L, -747010800L, -736383600L, -715215600L, -706748400L, -683161200L, -675298800L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {3020, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Dublin", new TStandardZoneRules(new long[] {-2821649700L, -1680471279L, -37242000L, 57722400L}, new int[] {-1500, -1521, 0, 3600, 0}, new long[] {-2821649700L, -1691962479L, -1680471279L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -733356000L, -719445600L, -699487200L, -684972000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-1500, -1521, 2079, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Gibraltar", new TStandardZoneRules(new long[] {-2821649916L, -401320800L}, new int[] {-1284, 0, 3600}, new long[] {-2821649916L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-1284, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Guernsey", new TStandardZoneRules(new long[] {-3852662325L, -37242000L, 57722400L}, new int[] {-75, 0, 3600, 0}, new long[] {-3852662325L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Helsinki", new TStandardZoneRules(new long[] {-1535938789L}, new int[] {5989, 7200}, new long[] {-1535938789L, -875671200L, -859773600L, 354672000L, 370396800L, 386121600L, 401846400L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {5989, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Isle_of_Man", new TStandardZoneRules(new long[] {-3852662325L, -37242000L, 57722400L}, new int[] {-75, 0, 3600, 0}, new long[] {-3852662325L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Istanbul", new TStandardZoneRules(new long[] {-2840147752L, -1869875816L, 267915600L, 468111600L, 1473195600L}, new int[] {6952, 7016, 7200, 10800, 7200, 10800}, new long[] {-2840147752L, -1869875816L, -1693706400L, -1680490800L, -1570413600L, -1552186800L, -1538359200L, -1522551600L, -1507514400L, -1490583600L, -1440208800L, -1428030000L, -1409709600L, -1396494000L, -931053600L, -922676400L, -917834400L, -892436400L, -875844000L, -764737200L, -744343200L, -733806000L, -716436000L, -701924400L, -684986400L, -670474800L, -654141600L, -639025200L, -622087200L, -606970800L, -590032800L, -575521200L, -235620000L, -194842800L, -177732000L, -165726000L, 107910000L, 121215600L, 133920000L, 152665200L, 164678400L, 184114800L, 196214400L, 215564400L, 228873600L, 245804400L, 260323200L, 428454000L, 433893600L, 468111600L, 482799600L, 496710000L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 654649200L, 670374000L, 686098800L, 701823600L, 717548400L, 733273200L, 748998000L, 764118000L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174784400L, 1193533200L, 1206838800L, 1224982800L, 1238288400L, 1256432400L, 1269738000L, 1288486800L, 1301274000L, 1319936400L, 1332637200L, 1351386000L, 1364691600L, 1382835600L, 1396227600L, 1414285200L, 1427590800L, 1446944400L, 1459040400L}, new int[] {6952, 7016, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800}));
        map.put("Europe/Jersey", new TStandardZoneRules(new long[] {-3852662325L, -37242000L, 57722400L}, new int[] {-75, 0, 3600, 0}, new long[] {-3852662325L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Kaliningrad", new TStandardZoneRules(new long[] {-2422056120L, -780372000L, -749095200L, 606870000L, 1301184000L, 1414278000L}, new int[] {4920, 3600, 7200, 10800, 7200, 10800, 7200}, new long[] {-2422056120L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -778730400L, -762663600L, -749095200L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 622598400L, 638323200L, 654652800L, 670377600L, 686102400L, 701827200L, 717552000L, 733276800L, 749001600L, 764726400L, 780451200L, 796176000L, 811900800L, 828230400L, 846374400L, 859680000L, 877824000L, 891129600L, 909273600L, 922579200L, 941328000L, 954028800L, 972777600L, 985478400L, 1004227200L, 1017532800L, 1035676800L, 1048982400L, 1067126400L, 1080432000L, 1099180800L, 1111881600L, 1130630400L, 1143331200L, 1162080000L, 1174780800L, 1193529600L, 1206835200L, 1224979200L, 1238284800L, 1256428800L, 1269734400L, 1288483200L, 1301184000L, 1414278000L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}));
        map.put("Europe/Kiev", new TStandardZoneRules(new long[] {-1441159324L, -1247536800L, -892522800L, -825382800L, 646783200L}, new int[] {7324, 7200, 10800, 3600, 10800, 7200}, new long[] {-1441159324L, -1247536800L, -892522800L, -857257200L, -844556400L, -828226800L, -825382800L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 646783200L, 686102400L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {7324, 7200, 10800, 7200, 3600, 7200, 3600, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Kirov", new TStandardZoneRules(new long[] {-1593820800L, -1247540400L, 606866400L, 670374000L, 701820000L, 1301180400L, 1414274400L}, new int[] {11928, 10800, 14400, 10800, 14400, 10800, 14400, 10800}, new long[] {-1593820800L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 575416800L, 591141600L, 622594800L, 638319600L, 654649200L, 670374000L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L}, new int[] {11928, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800}));
        map.put("Europe/Lisbon", new TStandardZoneRules(new long[] {-1830384000L, -118274400L, 212544000L, 717555600L, 828234000L}, new int[] {-2205, 0, 3600, 0, 3600, 0}, new long[] {-1830384000L, -1689555600L, -1677801600L, -1667437200L, -1647738000L, -1635814800L, -1616202000L, -1604365200L, -1584666000L, -1572742800L, -1553043600L, -1541206800L, -1521507600L, -1442451600L, -1426813200L, -1379293200L, -1364778000L, -1348448400L, -1333328400L, -1316394000L, -1301274000L, -1284339600L, -1269824400L, -1221440400L, -1206925200L, -1191200400L, -1175475600L, -1127696400L, -1111971600L, -1096851600L, -1080522000L, -1063587600L, -1049072400L, -1033347600L, -1017622800L, -1002502800L, -986173200L, -969238800L, -950490000L, -942022800L, -922669200L, -906944400L, -891133200L, -877309200L, -873684000L, -864007200L, -857955600L, -845859600L, -842839200L, -831348000L, -825901200L, -814410000L, -810784800L, -799898400L, -794451600L, -782960400L, -779335200L, -768448800L, -763002000L, -749091600L, -733366800L, -717631200L, -701906400L, -686181600L, -670456800L, -654732000L, -639007200L, -591832800L, -575503200L, -559778400L, -544053600L, -528328800L, -512604000L, -496879200L, -481154400L, -465429600L, -449704800L, -433980000L, -417650400L, -401925600L, -386200800L, -370476000L, -354751200L, -339026400L, -323301600L, -307576800L, -291852000L, -276127200L, -260402400L, -244677600L, -228348000L, -212623200L, -196898400L, -181173600L, -165448800L, -149724000L, -133999200L, -118274400L, 212544000L, 228268800L, 243993600L, 260323200L, 276048000L, 291772800L, 307501200L, 323222400L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417578400L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 846378000L, 859683600L, 877827600L}, new int[] {-2205, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Ljubljana", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/London", new TStandardZoneRules(new long[] {-3852662325L, -37242000L, 57722400L}, new int[] {-75, 0, 3600, 0}, new long[] {-3852662325L, -1691964000L, -1680472800L, -1664143200L, -1650146400L, -1633903200L, -1617487200L, -1601848800L, -1586037600L, -1570399200L, -1552168800L, -1538344800L, -1522533600L, -1507500000L, -1490565600L, -1473631200L, -1460930400L, -1442786400L, -1428876000L, -1410732000L, -1396216800L, -1379282400L, -1364767200L, -1348437600L, -1333317600L, -1315778400L, -1301263200L, -1284328800L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1189980000L, -1175464800L, -1159135200L, -1143410400L, -1126476000L, -1111960800L, -1095631200L, -1080511200L, -1063576800L, -1049061600L, -1032127200L, -1017612000L, -1001282400L, -986162400L, -969228000L, -950479200L, -942012000L, -904518000L, -896050800L, -875487600L, -864601200L, -844038000L, -832546800L, -812588400L, -798073200L, -781052400L, -772066800L, -764805600L, -748476000L, -733356000L, -719445600L, -717030000L, -706748400L, -699487200L, -687996000L, -668037600L, -654732000L, -636588000L, -622072800L, -605743200L, -590623200L, -574293600L, -558568800L, -542239200L, -527119200L, -512604000L, -496274400L, -481154400L, -464220000L, -449704800L, -432165600L, -417650400L, -401320800L, -386200800L, -369266400L, -354751200L, -337816800L, -323301600L, -306972000L, -291852000L, -276732000L, -257983200L, -245282400L, -226533600L, -213228000L, -195084000L, -182383200L, -163634400L, -150933600L, -132184800L, -119484000L, -100735200L, -88034400L, -68680800L, -59004000L, 57722400L, 69818400L, 89172000L, 101268000L, 120621600L, 132717600L, 152071200L, 164167200L, 183520800L, 196221600L, 214970400L, 227671200L, 246420000L, 259120800L, 278474400L, 290570400L, 309924000L, 322020000L, 341373600L, 354675600L, 372819600L, 386125200L, 404269200L, 417574800L, 435718800L, 449024400L, 467773200L, 481078800L, 499222800L, 512528400L, 530672400L, 543978000L, 562122000L, 575427600L, 593571600L, 606877200L, 625626000L, 638326800L, 657075600L, 670381200L, 688525200L, 701830800L, 719974800L, 733280400L, 751424400L, 764730000L, 782874000L, 796179600L, 814323600L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,0,0,3600), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,0,3600,0)));
        map.put("Europe/Luxembourg", new TStandardZoneRules(new long[] {-2069713476L, -1612659600L, -935186400L}, new int[] {1476, 3600, 0, 3600}, new long[] {-2069713476L, -1692496800L, -1680483600L, -1662343200L, -1650157200L, -1632006000L, -1618700400L, -1612659600L, -1604278800L, -1585519200L, -1574038800L, -1552258800L, -1539997200L, -1520550000L, -1507510800L, -1490572800L, -1473642000L, -1459119600L, -1444006800L, -1427673600L, -1411866000L, -1396224000L, -1379293200L, -1364774400L, -1348448400L, -1333324800L, -1316394000L, -1301270400L, -1284339600L, -1269813600L, -1253484000L, -1238364000L, -1221429600L, -1206914400L, -1191189600L, -1175464800L, -1160344800L, -1143410400L, -1127685600L, -1111960800L, -1096840800L, -1080511200L, -1063576800L, -1049061600L, -1033336800L, -1017612000L, -1002492000L, -986162400L, -969228000L, -950479200L, -942012000L, -935186400L, -857257200L, -844556400L, -828226800L, -812502000L, -797986800L, -781052400L, -766623600L, -745455600L, -733273200L, 228877200L, 243997200L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {1476, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Madrid", new TStandardZoneRules(new long[] {-2177452800L, -940208400L}, new int[] {-884, 0, 3600}, new long[] {-2177452800L, -1631926800L, -1616889600L, -1601168400L, -1585353600L, -1442451600L, -1427673600L, -1379293200L, -1364774400L, -1348448400L, -1333324800L, -1316390400L, -1301270400L, -1284339600L, -1269820800L, -1026954000L, -1017619200L, -1001898000L, -999482400L, -986090400L, -954115200L, -940208400L, -873079200L, -862621200L, -842839200L, -828320400L, -811389600L, -796870800L, -779940000L, -765421200L, -748490400L, -733971600L, -652327200L, -639018000L, 135122400L, 150246000L, 166572000L, 181695600L, 196812000L, 212540400L, 228866400L, 243990000L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {-884, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Malta", new TStandardZoneRules(new long[] {-2403478684L}, new int[] {3484, 3600}, new long[] {-2403478684L, -1690765200L, -1680487200L, -1664758800L, -1648951200L, -1635123600L, -1616896800L, -1604278800L, -1585533600L, -1571014800L, -1555293600L, -932432400L, -857257200L, -844556400L, -828226800L, -812588400L, -798073200L, -781052400L, -766717200L, -750898800L, -733359600L, -719456400L, -701917200L, -689209200L, -670460400L, -114051600L, -103168800L, -81997200L, -71715600L, -50547600L, -40266000L, -18493200L, -8211600L, 12956400L, 23238000L, 43801200L, 54687600L, 75855600L, 86742000L, 102380400L, 118105200L, 135730800L, 148518000L, 167187600L, 180489600L, 198637200L, 211939200L, 230086800L, 243388800L, 261536400L, 274838400L, 292986000L, 306288000L, 323312400L, 338342400L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Mariehamn", new TStandardZoneRules(new long[] {-1535938789L}, new int[] {5989, 7200}, new long[] {-1535938789L, -875671200L, -859773600L, 354672000L, 370396800L, 386121600L, 401846400L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {5989, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Minsk", new TStandardZoneRules(new long[] {-2840147416L, -1441158600L, -1247536800L, -899780400L, -804650400L, 670374000L, 1301184000L}, new int[] {6616, 6600, 7200, 10800, 3600, 10800, 7200, 10800}, new long[] {-2840147416L, -1441158600L, -1247536800L, -899780400L, -857257200L, -844556400L, -828226800L, -812502000L, -804650400L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 686102400L, 701827200L, 717552000L, 733276800L, 749001600L, 764726400L, 780451200L, 796176000L, 811900800L, 828230400L, 846374400L, 859680000L, 877824000L, 891129600L, 909273600L, 922579200L, 941328000L, 954028800L, 972777600L, 985478400L, 1004227200L, 1017532800L, 1035676800L, 1048982400L, 1067126400L, 1080432000L, 1099180800L, 1111881600L, 1130630400L, 1143331200L, 1162080000L, 1174780800L, 1193529600L, 1206835200L, 1224979200L, 1238284800L, 1256428800L, 1269734400L, 1288483200L, 1301184000L}, new int[] {6616, 6600, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800}));
        map.put("Europe/Monaco", new TStandardZoneRules(new long[] {-2486680172L, -1855958961L, -766623600L}, new int[] {1772, 561, 0, 3600}, new long[] {-2486680172L, -1855958961L, -1689814800L, -1680397200L, -1665363600L, -1648342800L, -1635123600L, -1616893200L, -1604278800L, -1585443600L, -1574038800L, -1552266000L, -1539997200L, -1520557200L, -1507510800L, -1490576400L, -1470618000L, -1459126800L, -1444006800L, -1427677200L, -1411952400L, -1396227600L, -1379293200L, -1364778000L, -1348448400L, -1333328400L, -1316394000L, -1301274000L, -1284339600L, -1269824400L, -1253494800L, -1238374800L, -1221440400L, -1206925200L, -1191200400L, -1175475600L, -1160355600L, -1143421200L, -1127696400L, -1111971600L, -1096851600L, -1080522000L, -1063587600L, -1049072400L, -1033347600L, -1017622800L, -1002502800L, -986173200L, -969238800L, -950490000L, -942012000L, -904438800L, -891136800L, -877827600L, -857257200L, -844556400L, -828226800L, -812502000L, -796266000L, -781052400L, -766623600L, 196819200L, 212540400L, 228877200L, 243997200L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {1772, 561, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Moscow", new TStandardZoneRules(new long[] {-1688265017L, -1593820800L, -1491188400L, -1247536800L, 670374000L, 695779200L, 1301180400L, 1414274400L}, new int[] {9017, 9079, 10800, 7200, 10800, 7200, 10800, 14400, 10800}, new long[] {-1688265017L, -1656819079L, -1641353479L, -1627965079L, -1618716679L, -1596429079L, -1593820800L, -1589860800L, -1542427200L, -1539493200L, -1525323600L, -1522728000L, -1491188400L, -1247536800L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 654649200L, 686102400L, 695779200L, 701823600L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L}, new int[] {9017, 9079, 12679, 9079, 16279, 12679, 16279, 14400, 10800, 14400, 18000, 14400, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800}));
        map.put("Europe/Nicosia", new TStandardZoneRules(new long[] {-1518920008L}, new int[] {8008, 7200}, new long[] {-1518920008L, 166572000L, 182293200L, 200959200L, 213829200L, 228866400L, 243982800L, 260316000L, 276123600L, 291765600L, 307486800L, 323820000L, 338936400L, 354664800L, 370386000L, 386114400L, 401835600L, 417564000L, 433285200L, 449013600L, 465339600L, 481068000L, 496789200L, 512517600L, 528238800L, 543967200L, 559688400L, 575416800L, 591138000L, 606866400L, 622587600L, 638316000L, 654642000L, 670370400L, 686091600L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796168800L, 811890000L, 828223200L, 843944400L, 859672800L, 875394000L, 891122400L, 909277200L, 922582800L, 941331600L}, new int[] {8008, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Oslo", new TStandardZoneRules(new long[] {-2366757780L}, new int[] {2580, 3600}, new long[] {-2366757780L, -1691884800L, -1680573600L, -927511200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -765327600L, -340844400L, -324514800L, -308790000L, -293065200L, -277340400L, -261615600L, -245890800L, -230166000L, -214441200L, -198716400L, -182991600L, -166662000L, -147913200L, -135212400L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {2580, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Paris", new TStandardZoneRules(new long[] {-1855958901L, -932436000L, -800071200L, -766623600L}, new int[] {561, 0, 3600, 0, 3600}, new long[] {-1855958901L, -1689814800L, -1680397200L, -1665363600L, -1648342800L, -1635123600L, -1616893200L, -1604278800L, -1585443600L, -1574038800L, -1552266000L, -1539997200L, -1520557200L, -1507510800L, -1490576400L, -1470618000L, -1459126800L, -1444006800L, -1427677200L, -1411952400L, -1396227600L, -1379293200L, -1364778000L, -1348448400L, -1333328400L, -1316394000L, -1301274000L, -1284339600L, -1269824400L, -1253494800L, -1238374800L, -1221440400L, -1206925200L, -1191200400L, -1175475600L, -1160355600L, -1143421200L, -1127696400L, -1111971600L, -1096851600L, -1080522000L, -1063587600L, -1049072400L, -1033347600L, -1017622800L, -1002502800L, -986173200L, -969238800L, -950490000L, -942012000L, -932436000L, -857257200L, -844556400L, -828226800L, -812502000L, -796266000L, -781052400L, -766623600L, 196819200L, 212540400L, 228877200L, 243997200L, 260326800L, 276051600L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {561, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Podgorica", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Prague", new TStandardZoneRules(new long[] {-2469401864L, -728517600L, -721260000L}, new int[] {3464, 3600, 0, 3600}, new long[] {-2469401864L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -765327600L, -746578800L, -733359600L, -728517600L, -721260000L, -716425200L, -701910000L, -684975600L, -670460400L, -654217200L, -639010800L, 291776400L, 307501200L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {3464, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Riga", new TStandardZoneRules(new long[] {-1377308194L, -928029600L, -899521200L, -795834000L, 606870000L}, new int[] {5794, 7200, 10800, 3600, 10800, 7200}, new long[] {-1632008194L, -1618702594L, -1601681794L, -1597275394L, -1377308194L, -928029600L, -899521200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -795834000L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 622598400L, 638323200L, 654652800L, 670377600L, 686102400L, 701827200L, 717552000L, 733276800L, 749001600L, 764726400L, 780451200L, 796176000L, 811900800L, 828230400L, 843955200L, 859683600L, 877827600L, 891133200L, 909277200L, 922582800L, 941331600L, 985482000L, 1004230800L, 1017536400L, 1035680400L}, new int[] {5794, 9394, 5794, 9394, 5794, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 3600, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Rome", new TStandardZoneRules(new long[] {-2403565200L}, new int[] {2996, 3600}, new long[] {-2403565200L, -1690765200L, -1680487200L, -1664758800L, -1648951200L, -1635123600L, -1616896800L, -1604278800L, -1585533600L, -1571014800L, -1555293600L, -932432400L, -857257200L, -844556400L, -828226800L, -812502000L, -798073200L, -781052400L, -766717200L, -750898800L, -733359600L, -719456400L, -701917200L, -689209200L, -670460400L, -114051600L, -103168800L, -81997200L, -71715600L, -50547600L, -40266000L, -18493200L, -8211600L, 12956400L, 23238000L, 43801200L, 54687600L, 75855600L, 86742000L, 107910000L, 118191600L, 138754800L, 149641200L, 170809200L, 181090800L, 202258800L, 212540400L, 233103600L, 243990000L, 265158000L, 276044400L, 296607600L, 307494000L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Samara", new TStandardZoneRules(new long[] {-1593820800L, -1247540400L, 606866400L, 670374000L, 686102400L, 687916800L, 1269727200L, 1301180400L}, new int[] {12020, 10800, 14400, 10800, 7200, 10800, 14400, 10800, 14400}, new long[] {-1593820800L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 575416800L, 591141600L, 622594800L, 638319600L, 654649200L, 687916800L, 701820000L, 717544800L, 733269600L, 748994400L, 764719200L, 780444000L, 796168800L, 811893600L, 828223200L, 846367200L, 859672800L, 877816800L, 891122400L, 909266400L, 922572000L, 941320800L, 954021600L, 972770400L, 985471200L, 1004220000L, 1017525600L, 1035669600L, 1048975200L, 1067119200L, 1080424800L, 1099173600L, 1111874400L, 1130623200L, 1143324000L, 1162072800L, 1174773600L, 1193522400L, 1206828000L, 1224972000L, 1238277600L, 1256421600L, 1288479600L, 1301180400L}, new int[] {12020, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400}));
        map.put("Europe/San_Marino", new TStandardZoneRules(new long[] {-2403565200L}, new int[] {2996, 3600}, new long[] {-2403565200L, -1690765200L, -1680487200L, -1664758800L, -1648951200L, -1635123600L, -1616896800L, -1604278800L, -1585533600L, -1571014800L, -1555293600L, -932432400L, -857257200L, -844556400L, -828226800L, -812502000L, -798073200L, -781052400L, -766717200L, -750898800L, -733359600L, -719456400L, -701917200L, -689209200L, -670460400L, -114051600L, -103168800L, -81997200L, -71715600L, -50547600L, -40266000L, -18493200L, -8211600L, 12956400L, 23238000L, 43801200L, 54687600L, 75855600L, 86742000L, 107910000L, 118191600L, 138754800L, 149641200L, 170809200L, 181090800L, 202258800L, 212540400L, 233103600L, 243990000L, 265158000L, 276044400L, 296607600L, 307494000L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Sarajevo", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Saratov", new TStandardZoneRules(new long[] {-1593820800L, -1247540400L, 575416800L, 670374000L, 701820000L, 1301180400L, 1414274400L, 1480806000L}, new int[] {11058, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}, new long[] {-1593820800L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 591145200L, 606870000L, 622594800L, 638319600L, 654649200L, 670374000L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L, 1480806000L}, new int[] {11058, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}));
        map.put("Europe/Simferopol", new TStandardZoneRules(new long[] {-2840148984L, -1441160160L, -1247536800L, -888894000L, -811648800L, 646786800L, 767739600L, 859683600L, 1396137600L, 1414274400L}, new int[] {8184, 8160, 7200, 10800, 3600, 10800, 7200, 10800, 7200, 14400, 10800}, new long[] {-2840148984L, -1441160160L, -1247536800L, -888894000L, -857257200L, -844556400L, -828226800L, -812502000L, -811648800L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 646786800L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 767739600L, 780436800L, 796165200L, 811886400L, 828219600L, 846374400L, 877827600L, 891133200L, 909277200L, 922582800L, 941331600L, 954032400L, 972781200L, 985482000L, 1004230800L, 1017536400L, 1035680400L, 1048986000L, 1067130000L, 1080435600L, 1099184400L, 1111885200L, 1130634000L, 1143334800L, 1162083600L, 1174784400L, 1193533200L, 1206838800L, 1224982800L, 1238288400L, 1256432400L, 1269738000L, 1288486800L, 1301187600L, 1319936400L, 1332637200L, 1351386000L, 1364691600L, 1382835600L, 1396137600L, 1414274400L}, new int[] {8184, 8160, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 14400, 10800}));
        map.put("Europe/Skopje", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Sofia", new TStandardZoneRules(new long[] {-2840146396L, -2369527016L, -857257200L, -781048800L}, new int[] {5596, 7016, 7200, 3600, 7200}, new long[] {-2840146396L, -2369527016L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781048800L, 291762000L, 307576800L, 323816400L, 339026400L, 355266000L, 370393200L, 386715600L, 401846400L, 417571200L, 433296000L, 449020800L, 465350400L, 481075200L, 496800000L, 512524800L, 528249600L, 543974400L, 559699200L, 575424000L, 591148800L, 606873600L, 622598400L, 638323200L, 654652800L, 670370400L, 686091600L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796168800L, 811890000L, 828223200L, 846363600L, 859683600L, 877827600L, 891133200L, 909277200L}, new int[] {5596, 7016, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Stockholm", new TStandardZoneRules(new long[] {-2871681132L, -2208992414L}, new int[] {4332, 3614, 3600}, new long[] {-2871681132L, -2208992414L, -1692496800L, -1680483600L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4332, 3614, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Tallinn", new TStandardZoneRules(new long[] {-1638322740L, -1593824400L, -1535938740L, -927943200L, -892954800L, -797652000L, 606870000L}, new int[] {5940, 3600, 5940, 7200, 10800, 3600, 10800, 7200}, new long[] {-1638322740L, -1632006000L, -1618700400L, -1593824400L, -1535938740L, -927943200L, -892954800L, -857257200L, -844556400L, -828226800L, -812502000L, -797652000L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 622598400L, 638323200L, 654652800L, 670377600L, 686102400L, 701827200L, 717552000L, 733276800L, 749001600L, 764726400L, 780451200L, 796176000L, 811900800L, 828230400L, 846374400L, 859680000L, 877824000L, 891129600L, 909277200L, 922582800L, 941331600L, 1017536400L, 1035680400L, 1048986000L, 1067130000L}, new int[] {5940, 3600, 7200, 3600, 5940, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        init1(map);
    }

    private static void init1(Map<String, TZoneRules> map) {
        map.put("Europe/Tirane", new TStandardZoneRules(new long[] {-1767230360L}, new int[] {4760, 3600}, new long[] {-1767230360L, -932346000L, -857257200L, -844556400L, -843519600L, 136854000L, 149896800L, 168130800L, 181432800L, 199839600L, 213141600L, 231894000L, 244591200L, 263257200L, 276040800L, 294706800L, 307490400L, 326156400L, 339458400L, 357087600L, 370389600L, 389142000L, 402444000L, 419468400L, 433807200L, 449622000L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4760, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Tiraspol", new TStandardZoneRules(new long[] {-2840147720L, -1637114100L, -1213148664L, -898138800L, -800157600L, 641944800L}, new int[] {6920, 6900, 6264, 7200, 3600, 10800, 7200}, new long[] {-2840147720L, -1637114100L, -1213148664L, -1187056800L, -1175479200L, -1159754400L, -1144029600L, -1127700000L, -1111975200L, -1096250400L, -1080525600L, -1064800800L, -1049076000L, -1033351200L, -1017626400L, -1001901600L, -986176800L, -970452000L, -954727200L, -927165600L, -898138800L, -857257200L, -844556400L, -828226800L, -812502000L, -800157600L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 641944800L, 654652800L, 670377600L, 686102400L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796168800L, 811890000L, 828223200L, 846363600L, 859680000L, 877824000L, 891129600L, 909273600L}, new int[] {6920, 6900, 6264, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,7200,0,1,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,10800,0,1,7200,10800,7200)));
        map.put("Europe/Ulyanovsk", new TStandardZoneRules(new long[] {-1593820800L, -1247540400L, 606866400L, 670374000L, 695779200L, 1301180400L, 1414274400L, 1459033200L}, new int[] {11616, 10800, 14400, 10800, 7200, 10800, 14400, 10800, 14400}, new long[] {-1593820800L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 575416800L, 591141600L, 622594800L, 638319600L, 654649200L, 686102400L, 695779200L, 701823600L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L, 1459033200L}, new int[] {11616, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}));
        map.put("Europe/Uzhgorod", new TStandardZoneRules(new long[] {-2500939752L, -773456400L, 646786800L, 670384800L}, new int[] {5352, 3600, 10800, 3600, 7200}, new long[] {-2500939752L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -794714400L, -773456400L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 646786800L, 670384800L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {5352, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 3600, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Vaduz", new TStandardZoneRules(new long[] {-3675198848L, -2385246586L}, new int[] {2048, 1786, 3600}, new long[] {-3675198848L, -2385246586L, -904435200L, -891129600L, -872985600L, -859680000L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {2048, 1786, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Vatican", new TStandardZoneRules(new long[] {-2403565200L}, new int[] {2996, 3600}, new long[] {-2403565200L, -1690765200L, -1680487200L, -1664758800L, -1648951200L, -1635123600L, -1616896800L, -1604278800L, -1585533600L, -1571014800L, -1555293600L, -932432400L, -857257200L, -844556400L, -828226800L, -812502000L, -798073200L, -781052400L, -766717200L, -750898800L, -733359600L, -719456400L, -701917200L, -689209200L, -670460400L, -114051600L, -103168800L, -81997200L, -71715600L, -50547600L, -40266000L, -18493200L, -8211600L, 12956400L, 23238000L, 43801200L, 54687600L, 75855600L, 86742000L, 107910000L, 118191600L, 138754800L, 149641200L, 170809200L, 181090800L, 202258800L, 212540400L, 233103600L, 243990000L, 265158000L, 276044400L, 296607600L, 307494000L, 323830800L, 338950800L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Vienna", new TStandardZoneRules(new long[] {-2422055121L}, new int[] {3921, 3600}, new long[] {-2422055121L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1618700400L, -1569711600L, -1555801200L, -938905200L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -781052400L, -780188400L, -748479600L, -733273200L, -717634800L, -701910000L, -684975600L, -670460400L, 323823600L, 338940000L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {3921, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Vilnius", new TStandardZoneRules(new long[] {-2840146876L, -1672536240L, -1585100136L, -1561251600L, -1553565600L, -928198800L, -900126000L, -802144800L, 606870000L, 891133200L, 941331600L}, new int[] {6076, 5040, 5736, 3600, 7200, 3600, 10800, 3600, 10800, 7200, 3600, 7200}, new long[] {-2840146876L, -1672536240L, -1585100136L, -1561251600L, -1553565600L, -928198800L, -900126000L, -857257200L, -844556400L, -828226800L, -812502000L, -802144800L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 622598400L, 638323200L, 654652800L, 670377600L, 686102400L, 701827200L, 717552000L, 733276800L, 749001600L, 764726400L, 780451200L, 796176000L, 811900800L, 828230400L, 846374400L, 859680000L, 877824000L, 909277200L, 922582800L, 1048986000L, 1067130000L, 1080435600L, 1099184400L}, new int[] {6076, 5040, 5736, 3600, 7200, 3600, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 3600, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Volgograd", new TStandardZoneRules(new long[] {-1577761060L, -1247540400L, 575416800L, 670374000L, 701820000L, 1301180400L, 1414274400L, 1540681200L}, new int[] {10660, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}, new long[] {-1577761060L, -1247540400L, 354916800L, 370724400L, 386452800L, 402260400L, 417988800L, 433796400L, 449611200L, 465343200L, 481068000L, 496792800L, 512517600L, 528242400L, 543967200L, 559692000L, 591145200L, 606870000L, 622594800L, 638319600L, 654649200L, 670374000L, 717548400L, 733273200L, 748998000L, 764722800L, 780447600L, 796172400L, 811897200L, 828226800L, 846370800L, 859676400L, 877820400L, 891126000L, 909270000L, 922575600L, 941324400L, 954025200L, 972774000L, 985474800L, 1004223600L, 1017529200L, 1035673200L, 1048978800L, 1067122800L, 1080428400L, 1099177200L, 1111878000L, 1130626800L, 1143327600L, 1162076400L, 1174777200L, 1193526000L, 1206831600L, 1224975600L, 1238281200L, 1256425200L, 1269730800L, 1288479600L, 1301180400L, 1414274400L, 1540681200L}, new int[] {10660, 10800, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 18000, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400}));
        map.put("Europe/Warsaw", new TStandardZoneRules(new long[] {-1717032240L, -1618700400L, -1501725600L}, new int[] {5040, 3600, 7200, 3600}, new long[] {-1717032240L, -1693706400L, -1680483600L, -1663455600L, -1650150000L, -1632006000L, -1600473600L, -1587168000L, -1501725600L, -931734000L, -857257200L, -844556400L, -828226800L, -812502000L, -796608000L, -778726800L, -762660000L, -748486800L, -733273200L, -715215600L, -701910000L, -684975600L, -670460400L, -654130800L, -639010800L, -397094400L, -386812800L, -371088000L, -355363200L, -334195200L, -323308800L, -307584000L, -291859200L, -271296000L, -260409600L, -239846400L, -228960000L, -208396800L, -197510400L, -176342400L, -166060800L, 228873600L, 243993600L, 260323200L, 276048000L, 291772800L, 307497600L, 323827200L, 338947200L, 354672000L, 370396800L, 386121600L, 401846400L, 417571200L, 433296000L, 449020800L, 465350400L, 481075200L, 496800000L, 512524800L, 528249600L, 543974400L, 559699200L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Zagreb", new TStandardZoneRules(new long[] {-2713915320L}, new int[] {4920, 3600}, new long[] {-2713915320L, -905824800L, -857257200L, -844556400L, -828226800L, -812502000L, -796777200L, -777942000L, -766623600L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {4920, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
        map.put("Europe/Zaporozhye", new TStandardZoneRules(new long[] {-2840149240L, -1441160400L, -1247536800L, -894769200L, -826419600L, 670374000L}, new int[] {8440, 8400, 7200, 10800, 3600, 10800, 7200}, new long[] {-2840149240L, -1441160400L, -1247536800L, -894769200L, -857257200L, -844556400L, -828226800L, -826419600L, 354920400L, 370728000L, 386456400L, 402264000L, 417992400L, 433800000L, 449614800L, 465346800L, 481071600L, 496796400L, 512521200L, 528246000L, 543970800L, 559695600L, 575420400L, 591145200L, 606870000L, 622594800L, 638319600L, 654649200L, 686091600L, 701820000L, 717541200L, 733269600L, 748990800L, 764719200L, 780440400L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {8440, 8400, 7200, 10800, 7200, 3600, 7200, 3600, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,7200,7200,10800), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,7200,10800,7200)));
        map.put("Europe/Zurich", new TStandardZoneRules(new long[] {-3675198848L, -2385246586L}, new int[] {2048, 1786, 3600}, new long[] {-3675198848L, -2385246586L, -904435200L, -891129600L, -872985600L, -859680000L, 354675600L, 370400400L, 386125200L, 401850000L, 417574800L, 433299600L, 449024400L, 465354000L, 481078800L, 496803600L, 512528400L, 528253200L, 543978000L, 559702800L, 575427600L, 591152400L, 606877200L, 622602000L, 638326800L, 654656400L, 670381200L, 686106000L, 701830800L, 717555600L, 733280400L, 749005200L, 764730000L, 780454800L, 796179600L, 811904400L, 828234000L, 846378000L, 859683600L, 877827600L}, new int[] {2048, 1786, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600}, new TZoneOffsetTransitionRule(3,25,7,3600,0,0,3600,3600,7200), new TZoneOffsetTransitionRule(10,25,7,3600,0,0,3600,7200,3600)));
    }
}
